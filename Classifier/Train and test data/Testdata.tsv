In	O
addition	O
to	O
these	O
fields	O
,	O
it	O
also	O
stores	O
five	O
integer	O
fields	O
that	O
have	O
identifiers	O
of	O
books	O
that	O
are	O
closely	O
related	O
to	O
it	O
and	O
have	O
a	O
similar	O
customer	O
Requests/second	O
Original	O
GlobeDB	M
'	O
-LRB-	O
b	O
-RRB-	O
Write	O
Accesses	O
'	O
`	O
We	O
evaluated	O
the	O
performance	O
of	O
four	O
different	O
systems	O
-LRB-	O
shown	O
in	O
Figure	O
6	O
-RRB-	O
:	O
-LRB-	O
i	O
-RRB-	O
a	O
traditional	O
centralized	O
architecture	O
where	O
the	O
code	O
and	O
the	O
database	O
is	O
run	O
in	O
a	O
server	O
across	O
a	O
WAN	O
-LRB-	O
Centralized	O
-RRB-	O
,	O
-LRB-	O
ii	O
-RRB-	O
a	O
simple	O
edge	O
server	O
architecture	O
where	O
three	O
edge	O
servers	O
run	O
a	O
Web	O
server	O
and	O
the	O
database	O
is	O
run	O
in	O
a	O
server	O
across	O
the	O
WAN	O
-LRB-	O
SES	O
-RRB-	O
,	O
-LRB-	O
iii	O
-RRB-	O
our	O
proposed	O
system	O
with	O
3	O
edge	O
servers	O
-LRB-	O
GlobeDB	M
-RRB-	O
`	O
System	O
`	O
Origin	O
Server	O
`	O
Origin	O
Server	O
Origin	O
Server	O
and	O
-LRB-	O
iv	O
-RRB-	O
a	O
full	O
replication	O
system	O
-LRB-	O
Full	O
-RRB-	O
which	O
is	O
similar	O
to	O
the	O
GlobeDB	M
setup	O
-	O
the	O
only	O
difference	O
being	O
that	O
the	O
tpcw	O
item	O
and	O
tpcw	O
customer	O
tables	O
are	O
fully	O
replicated	O
at	O
all	O
edge	O
servers	O
unlike	O
GlobeDB	M
	
GlobeDB	M
performs	O
better	O
than	O
SES	M
and	O
centralized	M
system	M
as	O
it	O
is	O
able	O
to	O
save	O
on	O
wide-area	O
network	O
latency	O
for	O
each	O
data	O
access	O
as	O
it	O
is	O
able	O
to	O
find	O
many	O
data	O
records	O
locally	O
	
The	O
difference	O
in	O
WIRT	O
between	O
the	O
GlobeDB	M
and	O
Full	O
setup	O
varies	O
from	O
100	O
to	O
400ms	O
	
This	O
is	O
because	O
the	O
GlobeDB	M
system	O
is	O
capable	O
of	O
performing	O
local	O
updates	O
-LRB-	O
the	O
server	O
that	O
writes	O
most	O
to	O
a	O
database	O
cluster	M
is	O
elected	O
as	O
its	O
master	O
-RRB-	O
but	O
the	O
Full	O
setup	O
forwards	O
all	O
updates	O
to	O
the	O
origin	O
server	O
	
On	O
the	O
other	O
hand	O
,	O
the	O
Full	O
setup	O
gains	O
in	O
the	O
fact	O
it	O
can	O
handle	O
some	O
complex	O
queries	O
such	O
as	O
search	O
result	O
interactions	O
locally	O
,	O
while	O
GlobeDB	M
forwards	O
it	O
to	O
the	O
origin	O
server	O
	
It	O
is	O
obvious	O
that	O
the	O
fully	O
replicated	O
system	O
produces	O
more	O
update	O
traffic	O
than	O
GlobeDB	M
as	O
it	O
propagates	O
each	O
update	O
to	O
all	O
edge	O
servers	O
	
In	O
this	O
experiment	O
,	O
we	O
found	O
that	O
GlobeDB	M
reduces	O
the	O
update	O
traffic	O
by	O
a	O
factor	O
of	O
6	O
compared	O
to	O
Full	O
replication	O
	
This	O
is	O
because	O
GlobeDB	M
prevents	O
unnecessary	O
update	O
traffic	O
by	O
placing	O
data	O
only	O
where	O
they	O
are	O
accessed	O
	
GlobeDB	M
attains	O
a	O
throughput	O
of	O
169	O
req/sec	O
and	O
is	O
2	O
WIPS	O
better	O
than	O
the	O
Full	O
setup	O
and	O
8	O
WIPS	O
better	O
than	O
SES	M
	
While	O
the	O
Full	O
setup	O
has	O
the	O
same	O
number	O
of	O
database	O
servers	O
as	O
GlobeDB	M
,	O
the	O
latter	O
sustains	O
higher	O
throughput	O
as	O
a	O
server	O
does	O
not	O
receive	O
updates	O
to	O
data	O
that	O
it	O
accesses	O
rarely	O
	
In	O
conclusion	O
,	O
the	O
results	O
show	O
that	O
the	O
GlobeDB	M
's	O
automatic	O
data	O
placement	O
can	O
reduce	O
client	O
access	O
latencies	O
for	O
typical	O
ecommerce	O
applications	O
with	O
a	O
large	O
mixture	O
of	O
read	O
and	O
write	O
operations	O
	
The	O
three	O
systems	O
evaluated	O
are	O
:	O
-LRB-	O
i	O
-RRB-	O
GlobeDB	M
-LRB-	O
0	O
,	O
0	O
,	O
1	O
-RRB-	O
:	O
a	O
system	O
with	O
weights	O
-LRB-	O
??	O
,	O
??	O
,	O
??	O
-RRB-	O
=	O
-LRB-	O
0,0,1	O
-RRB-	O
,	O
which	O
implies	O
the	O
system	O
wants	O
to	O
preserve	O
only	O
the	O
bandwidth	O
and	O
does	O
not	O
care	O
about	O
latency	O
,	O
-LRB-	O
ii	O
-RRB-	O
GlobeDB	M
-LRB-	O
1	O
,	O
1	O
,	O
0	O
-RRB-	O
:	O
a	O
system	O
whose	O
weights	O
are	O
set	O
such	O
that	O
the	O
system	O
cares	O
only	O
about	O
the	O
client	O
latency	O
and	O
does	O
not	O
have	O
any	O
constraints	O
on	O
the	O
amount	O
of	O
update	O
bandwidth	O
	
-LRB-	O
iii	O
-RRB-	O
GlobeDB	M
-LRB-	O
2	O
,	O
2	O
,	O
1	O
-RRB-	O
:	O
a	O
system	O
that	O
prefers	O
to	O
optimize	O
latency	O
twice	O
as	O
much	O
as	O
the	O
update	O
bandwidth	O
	
For	O
example	O
,	O
GlobeDB	M
-LRB-	O
0	O
,	O
0	O
,	O
1	O
-RRB-	O
is	O
useful	O
for	O
a	O
system	O
that	O
can	O
not	O
afford	O
to	O
pay	O
for	O
the	O
wide-area	O
bandwidth	O
consumed	O
in	O
its	O
remote	O
edge	O
servers	O
and	O
GlobeDB	M
-LRB-	O
1	O
,	O
1	O
,	O
0	O
-RRB-	O
is	O
useful	O
for	O
a	O
CDN	O
that	O
values	O
its	O
client	O
quality	O
of	O
service	O
-LRB-	O
QoS	O
-RRB-	O
more	O
than	O
its	O
maintenance	O
costs	O
consumed	O
for	O
maintaining	O
consistency	O
among	O
replicas	O
	
As	O
seen	O
in	O
the	O
figure	O
,	O
GlobeDB	M
-LRB-	O
0	O
,	O
0	O
,	O
1	O
-RRB-	O
performs	O
the	O
worst	O
in	O
terms	O
of	O
WIRT	O
,	O
as	O
it	O
leads	O
to	O
a	O
placement	O
where	O
the	O
data	O
are	O
not	O
replicated	O
at	O
all	O
	
With	O
respect	O
to	O
update	O
traffic	O
,	O
GlobeDB	M
-LRB-	O
2	O
,	O
2	O
,	O
1	O
-RRB-	O
performs	O
better	O
than	O
GlobeDB	M
-LRB-	O
1	O
,	O
1	O
,	O
0	O
-RRB-	O
and	O
reduces	O
update	O
traffic	O
by	O
a	O
factor	O
of	O
35	O
	
Note	O
that	O
,	O
while	O
GlobeDB	M
-LRB-	O
1	O
,	O
1	O
,	O
0	O
-RRB-	O
and	O
a	O
fully	O
replicated	O
system	O
have	O
similar	O
goals	O
,	O
the	O
former	O
yields	O
better	O
WIRT	O
as	O
it	O
is	O
able	O
to	O
perform	O
local	O
updates	O
	
We	O
also	O
note	O
that	O
these	O
works	O
can	O
be	O
combined	O
with	O
GlobeDB	M
to	O
scale	O
the	O
database	M
in	O
a	O
single	O
edge	O
server	O
	
In	O
this	O
paper	O
,	O
we	O
presented	O
GlobeDB	M
,	O
a	O
system	O
for	O
hosting	O
Web	O
applications	O
that	O
performs	O
efficient	O
autonomic	O
replication	O
of	O
application	O
data	O
	
The	O
goal	O
of	O
GlobeDB	M
is	O
to	O
provide	O
data-intensive	O
Web	O
applications	O
the	O
same	O
advantages	O
CDNs	O
offered	O
to	O
static	O
Web	O
pages	O
:	O
low	O
latency	O
and	O
reduced	O
update	O
traffic	O
	
In	O
our	O
evaluations	O
,	O
we	O
found	O
that	O
GlobeDB	M
significantly	O
improves	O
access	O
latencies	O
and	O
reduces	O
update	O
traffic	O
by	O
a	O
factor	O
of	O
6	O
compared	O
to	O
a	O
fully	O
replicated	O
system	O
	
The	O
system	O
can	O
learn	O
-LRB-	O
from	O
our	O
collection	O
-RRB-	O
the	O
transition	O
probabilities	O
with	O
the	O
Baum-Welch	M
algorithm	M
-LSB-	O
24	O
-RSB-	O
and	O
decode	O
the	O
collection	O
sequence	O
with	O
the	O
Viterbi	M
algorithm	M
-LSB-	O
24	O
-RSB-	O
	
We	O
force	O
the	O
model	O
to	O
start	O
with	O
state	O
E	O
,	O
and	O
use	O
the	O
Baum-Welch	M
algorithm	M
to	O
learn	O
the	O
transition	O
probabilities	O
and	O
the	O
output	O
probability	O
for	O
E	O
	
Once	O
all	O
the	O
parameters	O
are	O
estimated	O
,	O
we	O
use	O
the	O
Viterbi	M
algorithm	M
to	O
decode	O
the	O
collection	O
sequence	O
	
We	O
count	O
the	O
frequency	O
of	O
all	O
possible	O
n-grams	M
up	O
to	O
a	O
Algorithm	O
1	O
:	O
Dynamic	M
programming	M
algorithm	M
to	O
compute	O
top	O
k	O
segmentations	O
certain	O
length	O
-LRB-	O
n	O
=	O
1	O
,	O
2	O
,	O
??	O
??	O
??	O
,	O
5	O
-RRB-	O
that	O
occur	O
at	O
least	O
once	O
in	O
the	O
corpus	O
	
,	O
`	O
Input	O
:	O
query	O
w1w2	O
??	O
??	O
??	O
wn	O
,	O
frequencies	O
for	O
all	O
n-grams	M
not	O
longer	O
than	O
m	O
Output	O
:	O
frequencies	O
-LRB-	O
or	O
their	O
lower	O
bounds	O
-RRB-	O
for	O
all	O
n-grams	M
in	O
the	O
query	O
C	O
-LSB-	O
i	O
,	O
j	O
-RSB-	O
:	O
frequency	O
-LRB-	O
or	O
its	O
lower	O
bound	O
-RRB-	O
for	O
n-gram	M
wi	O
??	O
??	O
??	O
wj	O
'	O
<Equation_14>	O
`	O
Algorithm	O
2	O
:	O
Dynamic	M
programming	M
algorithm	M
to	O
compute	O
lower	O
bounds	O
for	O
n-gram	M
frequencies	O
`	O
There	O
are	O
two	O
serious	O
problems	O
with	O
this	O
approach	O
,	O
however	O
	
One	O
possibility	O
is	O
to	O
invoke	O
a	O
Semantic	M
Web	M
Service	M
on	O
this	O
mRNA	O
sequence	O
,	O
such	O
as	O
BLAST	O
,	O
a	O
search	O
engine	O
commonly	O
used	O
in	O
the	O
bioinformatics	O
community	O
to	O
locate	O
similar	O
sequences	O
-LSB-	O
35	O
-RSB-	O
	
The	O
user	O
could	O
click	O
on	O
the	O
BLAST	O
command	O
to	O
invoke	O
the	O
service	O
-LRB-	O
we	O
have	O
simulated	O
this	O
with	O
a	O
mocked	O
up	O
Semantic	M
Web	M
Service	M
called	O
NotQuiteABlast	O
-RRB-	O
	
``	O
This	O
is	O
in	O
contrast	O
to	O
how	O
services	O
such	O
as	O
BLAST	O
are	O
made	O
available	O
from	O
the	O
Web	O
today	O
";"	O
in	O
general	O
,	O
either	O
an	O
identifier	O
or	O
a	O
DNA	O
sequence	O
string	O
would	O
need	O
to	O
be	O
copied	O
and	O
pasted	O
manually	O
into	O
the	O
form	O
	
''	O
It	O
may	O
be	O
:	O
DFS	M
-LRB-	O
depth-first	M
search	M
-RRB-	O
The	O
strategy	O
is	O
FIFO	O
and	O
the	O
data	O
structure	O
is	O
a	O
stack	O
BFS	M
-LRB-	O
breadth-first	M
search	M
-RRB-	O
The	O
strategy	O
is	O
LIFO	O
and	O
the	O
data	O
structure	O
is	O
a	O
queue	O
DEG	M
-LRB-	O
higher	O
degree	O
-RRB-	O
The	O
most	O
pointed	O
URL	O
is	O
chosen	O
	
which	O
algorithm	O
is	O
chosen	O
:	O
'	O
For	O
DFS	M
algorithm	M
,	O
the	O
Unvisited	O
Set	O
is	O
a	O
stack	O
-LRB-	O
FIFO	O
-RRB-	O
'	O
For	O
BFS	M
algorithm	M
,	O
it	O
is	O
a	O
queue	O
-LRB-	O
LIFO	O
-RRB-	O
'	O
For	O
DEG	M
algorithm	M
,	O
it	O
is	O
a	O
priority	O
queue	O
-LRB-	O
heap	O
-RRB-	O
'	O
For	O
RND	M
algorithm	M
,	O
a	O
random	O
page	O
is	O
extracted	O
from	O
the	O
Unvisited	O
Set	O
	
Because	O
the	O
average	O
out-degree	O
of	O
a	O
page	O
is	O
large	O
enough	O
,	O
the	O
crawling	M
process	O
will	O
not	O
stop	O
unless	O
almost	O
all	O
pages	O
have	O
been	O
crawled	M
	
Sequential	M
pattern	M
mining	M
has	O
raised	O
great	O
interest	O
in	O
data	M
mining	M
research	O
field	O
in	O
recent	O
years	O
	
Sequential	M
pattern	M
mining	M
has	O
also	O
shown	O
its	O
utility	O
for	O
Web	O
data	O
analysis	O
,	O
such	O
as	O
mining	M
Web	O
log	O
data	O
-LSB-	O
2	O
-RSB-	O
and	O
identifying	O
comparative	O
sentences	O
from	O
Web	O
forum	O
posting	O
and	O
product	O
reviews	O
-LSB-	O
3	O
-RSB-	O
	
Heuristics	M
1	O
and	O
2	O
are	O
data-set	O
specific	O
,	O
in	O
the	O
sense	O
that	O
they	O
relate	O
to	O
the	O
Freebase	O
data	O
model	O
	
Heuristics	M
3	O
and	O
4	O
are	O
movie-domain	O
specific	O
and	O
would	O
be	O
different	O
in	O
other	O
domains	O
	
Sequential	M
pattern	M
mining	M
is	O
the	O
problem	O
of	O
finding	O
frequent	O
patterns	O
of	O
labels	O
in	O
sequences	O
of	O
data	O
items	O
-LRB-	O
see	O
-LSB-	O
12	O
-RSB-	O
for	O
a	O
survey	O
-RRB-	O
	
Ukkonen	M
's	M
algorithm	M
is	O
argued	O
for	O
lack	O
of	O
space	O
efficiency	O
in	O
building	O
a	O
suffix	M
tree	M
-LSB-	O
6	O
-RSB-	O
	
However	O
,	O
with	O
the	O
trade	O
off	O
of	O
space	O
cost	O
,	O
Ukkonen	M
's	M
algorithm	M
makes	O
it	O
possible	O
to	O
build	O
a	O
large	O
incremental	O
suffix	M
tree	M
online	O
,	O
which	O
allows	O
us	O
to	O
insert	O
a	O
document	O
into	O
the	O
suffix	M
tree	M
and	O
remove	O
it	O
dy	O
-	O
namically	O
	
UPGMA	M
-LRB-	O
unweighted	O
pair	O
group	O
method	O
using	O
arithmetic	O
averages	O
-RRB-	O
,	O
a	O
traditional	O
agglomerative	M
clustering	M
method	M
,	O
is	O
arranged	O
to	O
perform	O
topic	O
detection	O
process	O
because	O
it	O
achieves	O
the	O
best	O
performance	O
in	O
our	O
experiments	O
	
New	O
topics	O
generated	O
are	O
then	O
clustered	O
into	O
new	O
news	O
issue	O
candidates	O
using	O
the	O
UPGMA	M
algorithm	M
described	O
in	O
'	O
<Equation_5>	O
'	O
-RRB-	O
is	O
used	O
to	O
control	O
the	O
clustering	M
process	O
	
We	O
surveyed	O
the	O
cluto	O
toolkits	O
-LSB-	O
9	O
-RSB-	O
before	O
we	O
select	O
UPGMA	M
as	O
our	O
clustering	M
method	M
	
As	O
shown	O
in	O
Figure	O
1	O
,	O
the	O
best	O
performance	O
is	O
achieved	O
by	O
the	O
agglo-upgma	M
algorithm	M
,	O
which	O
is	O
a	O
traditional	O
agglomerative	M
clustering	M
method	M
based	O
on	O
UPGMA	M
	
We	O
consider	O
that	O
in	O
news	O
story	O
datasets	O
,	O
the	O
nearest	M
neighbors	M
of	O
a	O
story	O
are	O
always	O
of	O
the	O
same	O
class	O
,	O
which	O
may	O
be	O
the	O
reason	O
why	O
UPGMA	M
performs	O
best	O
among	O
all	O
	
So	O
we	O
add	O
a	O
threshold	O
d	O
??	O
when	O
implementing	O
the	O
UPGMA	M
algorithm	M
to	O
decide	O
when	O
the	O
clustering	M
process	O
stops	O
,	O
as	O
mentioned	O
in	O
Section	O
3	O
	
al	O
,	O
-LSB-	O
6	O
-RSB-	O
compares	O
these	O
similarity	O
measures	O
for	O
HAC	M
algorithms	M
,	O
and	O
finds	O
UPGMA	M
to	O
be	O
the	O
best	O
	
Sampling	M
is	O
typically	O
worse	O
than	O
greedy	M
,	O
but	O
unlike	O
the	O
partition	M
algorithm	M
,	O
its	O
performance	O
improves	O
dramatically	O
as	O
c	O
becomes	O
larger	O
,	O
and	O
does	O
not	O
worsen	O
as	O
quickly	O
when	O
a	O
gets	O
larger	O
	
Sampling	M
Greedy	M
Partition	M
'	O
We	O
present	O
the	O
sampling	M
algorithm	M
for	O
the	O
-LRB-	O
c	O
,	O
a	O
-RRB-	O
-	O
recommendation	O
subgraph	O
formally	O
below	O
	
We	O
prove	O
the	O
following	O
theorem	O
about	O
the	O
performance	O
of	O
the	O
Sampling	M
Algorithm	M
	
Since	O
each	O
vertex	O
in	O
L	O
is	O
in	O
exactly	O
c	O
matchings	O
,	O
each	O
vertex	O
in	O
L	O
has	O
degree	O
c	O
	
It	O
follows	O
that	O
except	O
for	O
a	O
o	O
-LRB-	O
1	O
-RRB-	O
probability	O
there	O
exists	O
a	O
-LRB-	O
c	O
,	O
a	O
-RRB-	O
-	O
recommendation	M
subgraph	O
in	O
G	O
`	O
Approximation	M
Algorithm	M
Using	O
Perfect	O
Matchings	O
:	O
`	O
The	O
above	O
result	O
now	O
enables	O
us	O
to	O
design	O
a	O
near	O
linear	O
time	O
algorithm	O
with	O
a	O
-LRB-	O
1	O
?êÆ	O
-RRB-	O
approximation	O
guarantee	O
to	O
the	O
-LRB-	O
c	O
,	O
a	O
-RRB-	O
-	O
recommendation	M
subgraph	M
problem	O
by	O
leveraging	O
combinatorial	O
properties	O
of	O
matchings	O
	
To	O
summarize	O
,	O
our	O
synthetic	O
experiments	O
show	O
the	O
following	O
strengths	O
of	O
each	O
algorithm	O
:	O
Sampling	M
Algorithm	M
:	O
Sampling	M
uses	O
little	O
to	O
no	O
memory	O
and	O
can	O
be	O
implemented	O
as	O
an	O
online	O
algorithm	O
	
Bandwidth	O
usage	O
:	O
The	O
bandwidth	O
usage	O
for	O
each	O
link	O
can	O
not	O
exceed	O
the	O
link	O
capacity	O
	
As	O
with	O
the	O
Greedy	M
algorithm	M
of	O
Section	O
'	O
331	O
,	O
`	O
the	O
algorithm	O
assumes	O
we	O
start	O
with	O
a	O
shortest-path	M
distribution	O
tree	M
T	O
with	O
depths	O
d	O
-LRB-	O
v	O
-RRB-	O
for	O
each	O
node	O
in	O
V	O
,	O
but	O
now	O
we	O
are	O
not	O
required	O
to	O
restrict	O
all	O
our	O
paths	O
to	O
T	O
	
8	O
Formally	O
,	O
we	O
need	O
to	O
have	O
the	O
interval	O
'	O
<Equation_10>	O
`	O
Most	O
Influential	O
Greedy	M
Heuristic	M
Input	M
:	O
-LRB-	O
U	O
,	O
B	O
,	O
pu	O
-RRB-	O
	
Next	O
we	O
see	O
that	O
even	O
in	O
simple	O
linear	O
influence	O
models	O
with	O
B	O
=	O
n	O
,	O
there	O
are	O
bad	O
examples	O
for	O
the	O
two	O
greedy	M
algorithms	M
Adaptive	M
Hybrid	M
Heuristic	M
Input	O
:	O
-LRB-	O
U	O
,	O
B	O
,	O
pu	O
-RRB-	O
	
The	O
optimal	O
value	O
Two-stage	M
Heuristic	M
Input	M
:	O
-LRB-	O
U	O
,	O
B	O
,	O
pu	O
-RRB-	O
	
,	O
n	O
Arguments	O
identical	O
to	O
those	O
made	O
above	O
allow	O
us	O
to	O
conclude	O
that	O
for	O
all	O
i	O
,	O
we	O
have	O
S	O
?ÿ	O
i	O
1	O
=	O
?å	O
S	O
?ÿ	O
i	O
?ê¬	O
-LCB-	O
s	O
-RCB-	O
	
Approximation	M
algorithms	M
are	O
provided	O
for	O
two	O
variants	O
of	O
coordinate	O
costs	O
:	O
diameter	O
cost	O
and	O
Steiner	M
cost	O
-LRB-	O
cost	O
of	O
the	O
minimum	O
Steiner	M
tree	M
where	O
the	O
team	O
members	O
are	O
the	O
terminal	O
nodes	O
-RRB-	O
	
Factoring	M
in	O
the	O
fact	O
that	O
1	O
?êÆ	O
1	O
:	O
-LCB-	O
Given	O
-LRB-	O
?¢given	O
,	O
?úgiven	O
,	O
G	O
,	O
ca	O
-RRB-	O
where	O
G	O
=	O
-LRB-	O
N	O
,	O
E	O
-RRB-	O
is	O
the	O
network	M
graph	O
,	O
?¢given	O
,	O
?úgiven	O
are	O
the	O
incomplete	O
sets	O
of	O
active	O
and	O
inactive	O
nodes	O
and	O
ca	O
is	O
an	O
approximate	O
value	O
of	O
|	O
?¢	O
|	O
-RCB-	O
2	O
:	O
?¢	O
pred	O
=	O
?¢given	O
3	O
:	O
Create	O
a	O
refined	O
graph	O
G	O
?Ç?	O
that	O
consists	O
of	O
nodes	O
in	O
N	O
?êÆ	O
?úgiven	O
4	O
:	O
Select	O
a	O
node	O
ni	O
at	O
random	O
from	O
?¢	O
5	O
:	O
Tstein	O
=	O
min	O
Steiner	O
tree	O
rooted	O
at	O
ni	O
in	O
G	O
?Ç?	O
covering	O
?¢given	O
6	O
:	O
Nstein	O
=	O
nodes	O
in	O
Tstein	O
7	O
:	O
?¢	O
pred	O
=	O
?¢	O
pred	O
?ê¬	O
Nstein	O
8	O
:	O
while	O
|	O
?¢	O
pred	O
|	O
?ëñ	O
ca	O
do	O
9	O
:	O
N	O
choose	O
=	O
ni	O
?êê	O
N	O
?êÆ	O
?úgiven	O
?êÆ	O
?¢	O
pred	O
10	O
:	O
?¢	O
pred	O
=	O
?¢	O
pred	O
?ê¬	O
-LCB-	O
argmaxn	O
?êê	O
N	O
choose	O
-LCB-	O
deg	O
-LRB-	O
n	O
-RRB-	O
?¢	O
pred	O
-RCB-	O
-RCB-	O
11	O
:	O
Output	O
?¢	O
pred	O
Figure	O
6	O
:	O
Heuristic	M
to	O
identify	O
?¢	O
pred	O
is	O
known	O
to	O
be	O
inapproximable	O
within	O
o	O
-LRB-	O
p	O
n/logn	O
-RRB-	O
-LSB-	O
38	O
-RSB-	O
	
Algorithm	O
2	O
Greedy	M
algorithm	M
for	O
recovering	O
nested	O
logit	O
tree	M
structure	O
	
Let	O
S	O
be	O
the	O
set	O
of	O
old	O
nodes	O
returned	O
by	O
the	O
Greedy	M
algorithm	M
for	O
the	O
k-budgeted	O
cover	O
on	O
H	O
t	O
where	O
t	O
is	O
the	O
index	O
of	O
the	O
most	O
recent	O
complete	O
recrawl	M
	
Greedy	M
algorithms	M
	
Dynamic	M
programming	M
on	O
trees	M
	
The	O
Greedy	M
algorithm	M
provides	O
us	O
with	O
an	O
upper	O
bound	O
for	O
the	O
potentially	O
cacheable	O
content	O
,	O
and	O
the	O
TTL-Cache	M
algorithm	M
the	O
lower	O
bound	O
if	O
all	O
the	O
optional	O
parameters	O
are	O
followed	O
explicitly	O
	
We	O
found	O
with	O
our	O
Greedy	M
algorithm	M
that	O
922	O
%	O
of	O
requests	O
and	O
679	O
%	O
of	O
bytes	O
could	O
have	O
been	O
served	O
from	O
cache	O
	
Global	O
constraints	O
can	O
be	O
classified	O
based	O
on	O
the	O
complexity	O
of	O
solving	O
them	O
-LRB-	O
ie	O
For	O
example	O
,	O
a	O
natural	O
greedy	M
algorithm	M
is	O
Max-Rate	M
Greedy	M
algorithm	M
:	O
Initially	O
set	O
the	O
winning	O
set	O
to	O
the	O
empty	O
set	O
,	O
and	O
then	O
iteratively	O
,	O
add	O
a	O
bid	O
on	O
a	O
query	O
with	O
the	O
highest	O
ratio	O
of	O
marginal	O
profit	O
over	O
the	O
marginal	O
cost	O
,	O
or	O
the	O
query	O
with	O
the	O
highest	O
ratio	O
of	O
marginal	O
value	O
over	O
marginal	O
cost	O
	
S	O
Yamazaki	O
is	O
the	O
president	O
of	O
SEL	O
-LRB-	O
Semiconductor	O
Energy	O
Laboratory	O
-RRB-	O
	
For	O
instance	O
,	O
in	O
-LSB-	O
22	O
-RSB-	O
the	O
authors	O
used	O
a	O
two-pass	O
K-means	M
clustering	M
algorithm	M
and	O
a	O
KL-divergence	M
distance	M
metric	M
to	O
organize	O
a	O
document	O
collection	O
into	O
100	O
topical	O
clusters	M
-LRB-	O
or	O
shards	O
-RRB-	O
and	O
demonstrated	O
the	O
benefits	O
of	O
selectively	O
searching	O
only	O
a	O
few	O
shards	O
per	O
query	O
	
Online	O
algorithms	O
propose	O
solutions	O
to	O
problems	O
where	O
the	O
input	O
is	O
not	O
known	O
in	O
advance	O
and	O
must	O
be	O
processed	O
as	O
it	O
arrives	O
in	O
a	O
sequential	O
online	O
fashion	O
-LSB-	O
10	O
-RSB-	O
	
Job	M
Scheduling	M
-RRB-	O
problems	O
	
Sampling-based	M
approaches	M
,	O
such	O
as	O
video	M
magnifier	M
-LSB-	O
20	O
-RSB-	O
and	O
Minivideo	M
-LSB-	O
25	O
-RSB-	O
,	O
usually	O
extract	O
keyframes	O
from	O
videos	O
in	O
a	O
random	O
or	O
uniform	O
manner	O
	
`	O
Algorithm	O
2	O
Greedy	M
algorithm	M
for	O
shot	O
subset	O
selection	O
1	O
:	O
Input	O
:	O
v	O
,	O
y	O
2	O
:	O
Initialize	O
prediction	O
?»	O
y	O
?åÉ	O
?êà	O
'	O
<Equation_27>	O
'	O
5	O
:	O
end	O
for	O
6	O
:	O
return	O
?»	O
y	O
satisfying	O
the	O
condition	O
that	O
?»	O
y	O
?ê¬	O
-LCB-	O
y	O
-RCB-	O
is	O
the	O
shot	O
set	O
with	O
the	O
highest	O
score	O
	
`	O
Algorithm	O
2	O
Greedy	M
algorithm	M
using	O
the	O
independence	O
graph	O
1	O
:	O
Input	O
:	O
x	O
,	O
y	O
2	O
:	O
Initialize	O
prediction	O
?»	O
y	O
?åÉ	O
?êà	O
3	O
:	O
for	O
i	O
=	O
1	O
,	O
2	O
,	O
	
For	O
a	O
fixed	O
T	O
and	O
b	O
,	O
O	O
-LRB-	O
T	O
,	O
b	O
-RRB-	O
defines	O
a	O
fractional	O
Knapsack	M
problem	M
over	O
the	O
set	O
T	O
	
O	O
-LRB-	O
N	O
-LRB-	O
St	O
?ê¬	O
-LCB-	O
x	O
-RCB-	O
-RRB-	O
,	O
t	O
-RRB-	O
is	O
the	O
optimal	O
solution	O
to	O
the	O
fractional	O
Knapsack	M
problem	M
-LRB-	O
8	O
-RRB-	O
with	O
budget	O
t	O
and	O
can	O
be	O
computed	O
in	O
time	O
min	O
-LRB-	O
t	O
p	O
min	O
n	O
-RRB-	O
by	O
iterating	O
over	O
the	O
list	O
of	O
nodes	O
in	O
N	O
-LRB-	O
St	O
?ê¬	O
-LCB-	O
x	O
-RCB-	O
-RRB-	O
in	O
decreasing	O
order	O
of	O
the	O
degrees	O
	
Analysis	O
of	O
Approximation	M
Algorithm	M
	
The	O
former	O
task	O
can	O
be	O
done	O
using	O
LSH	M
algorithm	M
in	O
O	O
-LRB-	O
n	O
e	O
-RRB-	O
time	O
for	O
some	O
exponent	O
e	O
?ë?	O
1	O
-LSB-	O
11	O
-RSB-	O
,	O
while	O
the	O
latter	O
task	O
can	O
be	O
done	O
using	O
eg	O
,	O
the	O
2-approximate	O
GMM	M
algorithm	M
-LSB-	O
10	O
-RSB-	O
in	O
O	O
-LRB-	O
|	O
Ra	O
|	O
k	O
-RRB-	O
time	O
	
This	O
is	O
done	O
by	O
using	O
GMM	M
algorithm	M
during	O
the	O
offline	O
process	O
of	O
dLSH	M
*	O
-LRB-	O
lines	O
7-May	O
,	O
algorithm	M
4	O
-RRB-	O
	
Arguments	O
similar	O
to	O
those	O
presented	O
in	O
the	O
above	O
probabilistic	M
argument	O
,	O
applied	O
to	O
the	O
case	O
in	O
which	O
one	O
random	O
subset	O
of	O
S	O
*	O
is	O
initially	O
selected	O
,	O
can	O
be	O
used	O
to	O
prove	O
that	O
the	O
weight	O
of	O
the	O
optimal	O
restricted	O
solution	O
for	O
that	O
class	O
is	O
at	O
least	O
2-jan	O
of	O
the	O
weight	O
of	O
the	O
optimal	O
unrestricted	O
solution	O
	
BFS	M
:	O
starts	O
a	O
Breadth	M
First	M
Search	M
algorithm	M
in	O
an	O
arbitrary	O
node	O
of	O
the	O
graph	O
and	O
assigns	O
a	O
value	O
of	O
f	O
-LRB-	O
i	O
-RRB-	O
=	O
1	O
to	O
all	O
nodes	O
it	O
encounters	O
until	O
it	O
reaches	O
a	O
count	O
of	O
??n	O
nodes	O
	
`	O
Scheduling	O
the	O
monitoring	O
tasks	O
	
M	O
?åÉ	O
m/s	O
for	O
i	O
?êê	O
-LSB-	O
0	O
	
	
M	O
?êÆ	O
1	O
-RSB-	O
do	O
add	O
to	O
P	O
,	O
the	O
substring	O
C	O
s	O
-LSB-	O
i	O
-LRB-	O
n/M	O
-RRB-	O
-RSB-	O
return	O
pool	O
P	O
Regular	O
Sampling	M
	
Sampling	M
	
Sampling	M
is	O
an	O
essential	O
component	O
of	O
big-data	O
algorithms	O
,	O
so	O
initially	O
we	O
explored	O
alternatives	O
to	O
regular	O
sampling	M
	
Reservoir	M
Sampling	M
	
We	O
apply	O
the	O
Chu-Liu/Edmonds	M
'	M
algorithm	M
-LSB-	O
6	O
-RSB-	O
to	O
solve	O
the	O
problem	O
	
They	O
took	O
a	O
similar	O
philosophy	O
of	O
maximizing	M
likelihood	M
over	O
all	O
the	O
possible	O
tree	M
structures	O
and	O
employ	O
the	O
Markov	M
Chain	M
Monte	M
Carlo	M
Sampling	M
algorithm	M
-LSB-	O
10	O
-RSB-	O
to	O
get	O
the	O
optimal	O
structure	O
	
Gibbs	M
sampling	M
is	O
a	O
simple	O
and	O
widely	O
applicable	O
Markov	M
chain	M
Monte	M
Carlo	M
algorithm	M
	
'	O
42	O
Depth-first	M
search	M
for	O
candidate	O
genera	O
-	O
tion	O
`	O
Using	O
the	O
seed	M
bigrams	M
described	O
in	O
the	O
previous	O
section	O
,	O
we	O
attempt	O
to	O
generate	O
higher	O
order	O
n-grams	M
that	O
will	O
finally	O
serve	O
as	O
candidate	O
micropinions	O
	
Greedy	M
algorithms	M
are	O
known	O
to	O
generate	O
good	O
solutions	O
when	O
maximizing	O
submodular	O
functions	O
with	O
a	O
cardinality	O
constraint	O
and	O
were	O
used	O
in	O
-LSB-	O
1	O
,	O
14	O
-RSB-	O
	
``	O
In	O
order	O
to	O
ensure	O
faster	O
GMM	M
fitting	O
,	O
we	O
optimized	O
model	O
fitting	O
procedure	O
";"	O
the	O
EM	M
model	M
was	O
parameterized	O
using	O
K-means	M
clustering	M
	
''	O
We	O
extract	O
the	O
following	O
features	O
from	O
the	O
images	O
in	O
our	O
data	O
set	O
	
Autocorrelation	M
	
Autocorrelation	M
measures	O
the	O
coarseness	O
of	O
an	O
image	O
by	O
evaluating	O
the	O
linear	O
spatial	O
relationships	O
between	O
texture	O
primitives	O
	
Legendre	M
and	M
Zernike	M
Momemts	M
	
`	O
Global	O
moments	O
are	O
employed	O
as	O
the	O
invariant	O
global	O
features	O
of	O
an	O
image	O
in	O
pattern	M
recognition	M
due	O
to	O
their	O
ability	O
to	O
recognize	O
shapes	O
	
'	O
23	O
Extending	O
Static	O
Representation	O
with	O
Temporal	O
Signals	O
`	O
Our	O
approach	O
is	O
inspired	O
by	O
the	O
desire	O
to	O
augment	O
text	O
representation	O
with	O
massive	O
amounts	O
of	O
temporal	O
world	O
knowledge	O
	
`	O
Sampling	M
is	O
the	O
process	O
where	O
we	O
decide	O
which	O
users	O
get	O
assigned	O
into	O
what	O
variant	O
	
'	O
Facts	O
and	O
Hypotheses	O
	
Here	O
,	O
we	O
just	O
give	O
an	O
example	O
for	O
facts	O
about	O
the	O
disambiguation	O
prior	O
of	O
the	O
wic	O
Elvis@D29:	O
disambPrior	O
-LRB-	O
Elvis@D29,	O
ElvisPresley	O
,	O
8	O
-RRB-	O
-LSB-	O
1	O
-RSB-	O
disambPrior	O
-LRB-	O
Elvis@D29,	O
ElvisCostello	O
,	O
2	O
-RRB-	O
-LSB-	O
1	O
-RSB-	O
Hypotheses	O
	
Approximation	M
Algorithms	M
	
Isotonic	M
regression	M
	
Variations	O
in	O
segmentation	O
accuracy	O
on	O
both	O
datasets	O
with	O
changing	O
values	O
of	O
penalty	O
are	O
plotted	O
in	O
Figure	O
3	O
	
Sorting	M
:	O
In	O
this	O
approach	O
,	O
proposed	O
by	O
Silvestri	O
in	O
-LSB-	O
21	O
-RSB-	O
,	O
we	O
simply	O
sort	O
the	O
collection	O
by	O
their	O
URLs	O
,	O
then	O
assign	O
docIDs	O
according	O
to	O
this	O
ordering	O
	
hepph	O
:	O
a	O
co-authorship	O
network	O
among	O
arXiv	O
High	O
Energy	O
Physics	O
publications	O
	
Weighting	O
:	O
The	O
Sampling	M
step	O
uses	O
only	O
the	O
token	O
weights	O
from	O
R	O
2	O
for	O
the	O
sampling	M
,	O
ignoring	O
the	O
weights	O
of	O
the	O
in	O
the	O
other	O
relation	O
,	O
R	O
1	O
	
Section	O
51	O
addresses	O
the	O
Sampling	M
step	O
,	O
while	O
Section	O
52	O
focuses	O
on	O
the	O
Weighting	O
and	O
Thresholding	O
steps	O
for	O
the	O
asymmetric	O
versions	O
of	O
the	O
join	O
	
`	O
Given	O
the	O
RiWeights	O
relations	O
,	O
we	O
now	O
show	O
how	O
to	O
implement	O
the	O
Sampling	M
step	O
of	O
the	O
text	O
join	O
approximation	O
strategy	O
-LRB-	O
Section	O
42	O
-RRB-	O
in	O
SQL	O
	
Finally	O
,	O
a	O
pure-SQL	O
simulation	O
of	O
the	O
Sampling	M
step	O
deterministically	O
defines	O
that	O
each	O
tuple	O
will	O
result	O
in	O
Round	O
-LRB-	O
S	O
??	O
RiWeightsweight	O
`	O
RiSumtotal	O
'	O
-RRB-	O
successes	O
after	O
S	O
trials	O
,	O
on	O
average	O
	
In	O
the	O
rest	O
of	O
the	O
paper	O
--	O
to	O
keep	O
the	O
discussion	O
close	O
to	O
the	O
probabilistic	O
framework	O
--	O
we	O
use	O
the	O
cursorbased	O
approach	O
for	O
the	O
Sampling	M
step	O
	
'	O
53	O
Implementing	O
a	O
Symmetric	M
Text	M
Join	M
Approximation	M
in	O
SQL	O
'	O
Up	O
to	O
now	O
we	O
have	O
described	O
only	O
an	O
asymmetric	O
text	O
join	O
approximation	O
approach	O
,	O
in	O
which	O
we	O
sample	O
relation	O
R	O
2	O
and	O
weight	O
the	O
samples	O
according	O
to	O
the	O
tuples	O
in	O
R	O
1	O
-LRB-	O
or	O
vice	O
versa	O
-RRB-	O
	
Sampling	M
has	O
been	O
utilized	O
in	O
a	O
variety	O
of	O
tasks	O
of	O
database	O
interest	O
including	O
data	O
mining	O
,	O
estimation	O
and	O
optimization	O
of	O
queries	O
,	O
and	O
query	O
answering	O
	
Variational	M
approximation	M
was	O
often	O
adopted	O
-LRB-	O
3	O
-RRB-	O
under	O
some	O
unwarranted	O
meanfield	O
assumptions	O
	
To	O
address	O
these	O
two	O
different	O
limitations	O
,	O
we	O
present	O
a	O
novel	O
scalable	O
solution	O
to	O
do	O
posterior	O
inference	O
using	O
Gibbs	M
Sampling	M
which	O
avoids	O
any	O
restricting	O
assumptions	O
and	O
can	O
be	O
easily	O
scaled	O
up	O
to	O
capture	O
thousands	O
of	O
topics	O
from	O
millions	O
of	O
documents	O
in	O
a	O
parallel	O
environment	O
,	O
while	O
also	O
being	O
faster	O
on	O
single	O
machines	O
	
To	O
deal	O
with	O
the	O
non-conjugacy	O
in	O
the	O
model	O
,	O
within	O
the	O
Gibbs	M
Sampling	M
framework	O
,	O
we	O
use	O
recent	O
developments	O
in	O
Stochastic	M
MCMC	M
and	O
use	O
Stochastic	M
Gradient	M
Langevin	M
Dynamics	M
-LRB-	O
SGLD	M
-RRB-	O
-LRB-	O
28	O
-RRB-	O
to	O
sample	O
the	O
logistic	O
normal	O
parameters	O
by	O
observing	O
only	O
a	O
mini-batch	O
of	O
the	O
document	O
set	O
	
Hence	O
,	O
we	O
intend	O
to	O
try	O
a	O
more	O
adaptive	O
approach	O
such	O
as	O
AdaGrad	M
-LRB-	O
11	O
-RRB-	O
,	O
or	O
use	O
more	O
recent	O
and	O
sophisticated	O
Stochastic	M
Gradi-ent	M
Monte	M
Carlo	M
methods	M
such	O
as	O
SGHMC	M
-LRB-	O
9	O
-RRB-	O
and	O
SGNHT	M
-LRB-	O
10	O
-RRB-	O
for	O
inference	O
	
Our	O
algorithm	O
is	O
a	O
novel	O
combination	O
of	O
Stochastic	M
Gradient	M
Langevin	M
Dynamics	M
and	O
Metropolis	M
-	O
Hastings	M
sampler	M
using	O
Alias	M
tables	M
in	O
a	O
blockwise	O
Gibbs	M
Sampling	M
framework	O
	
'	O
	
	
,	O
vn	O
-RRB-	O
`	O
where	O
vi	O
,	O
vj	O
?êê	O
V	O
for	O
1	O
?ëñ	O
i	O
,	O
j	O
?ëñ	O
n	O
,	O
i	O
=	O
j	O
except	O
possible	O
1	O
=	O
n	O
`	O
Definition	O
1	O
-LRB-	O
Betweenness	M
Centrality	M
-RRB-	O
	
-LRB-	O
Betweenness	M
Centrality	M
Update	O
Theorem	O
-RRB-	O
`	O
By	O
Lemma	O
1	O
and	O
Lemma	O
2	O
,	O
we	O
can	O
compute	O
the	O
betweenness	M
centrality	M
of	O
a	O
vertex	O
vi	O
,	O
c	O
-LRB-	O
vi	O
-RRB-	O
	
Since	O
this	O
learning	O
framework	O
is	O
similar	O
to	O
that	O
of	O
Parameter	M
servers	M
-LSB-	O
9	O
-RSB-	O
and	O
Petuum	M
-LSB-	O
10	O
-RSB-	O
or	O
Spark	M
-LSB-	O
11	O
-RSB-	O
,	O
D-NOC	M
could	O
be	O
implemented	O
on	O
these	O
promising	O
platforms	O
without	O
major	O
modification	O
	
We	O
focus	O
on	O
Markov	M
chain	M
Monte	M
Carlo	M
sampling	M
-LSB-	O
28	O
-RSB-	O
inference	O
than	O
variational	O
inference	O
-LSB-	O
32	O
-RSB-	O
,	O
since	O
the	O
former	O
has	O
the	O
preferable	O
advantages	O
such	O
as	O
easy	O
implementations	O
and	O
sampling	O
speed	O
	
`	O
With	O
reference	O
to	O
the	O
graphical	O
model	O
shown	O
in	O
Figure	O
2	O
,	O
the	O
generative	O
procedure	O
of	O
NOC	M
is	O
described	O
as	O
follows	O
:	O
'	O
331	O
Global	O
hierarchical	O
topic	O
tree	O
structure	O
gener	O
-	O
ation	O
'	O
Each	O
node	O
in	O
the	O
tree	O
defines	O
a	O
CRP	M
over	O
children	O
and	O
corresponds	O
to	O
an	O
atom	O
-LRB-	O
topic	O
-RRB-	O
independent	O
of	O
G0	O
using	O
Eq	O
-LRB-	O
4	O
-RRB-	O
:	O
'	O
<Equation_16>	O
'	O
<Equation_17>	O
where	O
u	O
\	O
\	O
is	O
the	O
suffix	O
of	O
u	O
consisting	O
of	O
all	O
but	O
the	O
earliest	O
word	O
	
This	O
is	O
why	O
we	O
call	O
this	O
algorithm	O
an	O
approximated	O
Gibbs	M
Sampling	M
	
Although	O
we	O
require	O
Memcached	O
to	O
accelerate	O
the	O
I/O	O
performance	O
in	O
the	O
system	O
build	O
on	O
Hadoop	O
,	O
we	O
would	O
not	O
use	O
it	O
in	O
the	O
the	O
system	O
build	O
on	O
Spark	M
	
Consequently	O
,	O
D	O
-	O
NOC	M
can	O
process	O
large	O
data	O
sets	O
while	O
preserving	O
full	O
generative	O
model	O
performance	O
,	O
and	O
offers	O
the	O
approximated	O
Gibbs	M
Sampling	M
of	O
NOC	M
	
Variations	O
of	O
the	O
same	O
measure	O
have	O
also	O
been	O
successfully	O
used	O
for	O
web-spam	O
detection	O
-LSB-	O
11	O
-RSB-	O
,	O
automated	O
image	O
colorization	O
-LSB-	O
13	O
-RSB-	O
and	O
image	O
segmentation	O
with	O
user	O
feedback	O
-LSB-	O
7	O
-RSB-	O
	
Inverted	O
indexes	O
are	O
usually	O
stored	O
in	O
highly	O
compressed	O
form	O
on	O
disk	O
or	O
in	O
main	O
memory	O
,	O
such	O
that	O
each	O
list	O
is	O
laid	O
out	O
in	O
a	O
contiguous	O
manner	O
	
However	O
,	O
to	O
be	O
efficient	O
,	O
computations	O
need	O
to	O
the	O
carefully	O
structured	O
to	O
conform	O
to	O
the	O
programming	O
model	O
offered	O
by	O
the	O
GPU	M
,	O
which	O
is	O
a	O
data-parallel	O
model	O
reminiscent	O
of	O
the	O
massively	O
parallel	O
SIMD	M
models	O
studied	O
in	O
the	O
1980s	O
	
Query	O
Stealing	O
and	O
Scheduling	O
:	O
One	O
disadvantage	O
of	O
the	O
above	O
query	O
assignment	O
policy	O
is	O
that	O
when	O
the	O
query	O
characteristics	O
change	O
temporarily	O
or	O
when	O
processing	O
time	O
is	O
not	O
accurately	O
predicted	O
,	O
the	O
load	O
on	O
CPU	O
and	O
GPU	M
may	O
become	O
unbalanced	O
such	O
that	O
one	O
processor	O
has	O
too	O
much	O
work	O
and	O
the	O
other	O
too	O
little	O
	
Inverted	O
indexes	O
are	O
usually	O
stored	O
in	O
highly	O
compressed	O
form	O
on	O
disk	O
,	O
or	O
sometimes	O
in	O
main	O
memory	O
if	O
space	O
is	O
available	O
	
The	O
data	O
is	O
then	O
transferred	O
to	O
the	O
GPU	M
Global	O
Memory	O
,	O
which	O
also	O
maintains	O
its	O
own	O
cache	O
of	O
index	O
data	O
in	O
order	O
to	O
decrease	O
the	O
time	O
for	O
main	O
memory-to-GPU	O
data	O
transfers	O
	
``	O
Multi-level	M
tree-based	M
algorithms	M
for	O
prefix	O
sums	O
on	O
GPUs	M
were	O
discussed	O
in	O
-LSB-	O
4	O
-RSB-	O
based	O
on	O
earlier	O
SIMD	M
algorithms	O
";"	O
we	O
adapted	O
and	O
fine-tuned	O
these	O
for	O
unary	O
and	O
b-bit	O
binary	O
data	O
	
''	O
Hashing	M
methods	M
are	O
approximate	O
nearest	M
neighbor	M
search	O
methods	O
,	O
and	O
are	O
popular	O
due	O
to	O
their	O
speed	O
	
Gradient	M
descent	M
:	O
The	O
weight	O
matrix	O
W	O
is	O
updated	O
by	O
averaging	O
gradient	O
estimates	O
given	O
by	O
a	O
set	O
of	O
queries	O
and	O
taking	O
a	O
step	O
along	O
the	O
average	O
gradient	O
	
Dealing	O
with	O
Aggressive	M
Fingerprinting	M
	
Realtime	O
password	O
locator	O
:	O
this	O
component	O
maintains	O
a	O
16	O
character	O
FIFO	O
that	O
stores	O
the	O
last	O
16	O
keys	O
typed	O
while	O
the	O
browser	O
had	O
focus	O
	
when	O
a	O
typed	O
sequence	O
in	O
the	O
FIFO	O
matches	O
a	O
password	O
in	O
the	O
PPL	O
-RRB-	O
it	O
checks	O
whether	O
the	O
URL	O
of	O
the	O
current	O
server	O
is	O
among	O
the	O
URLs	O
previously	O
associated	O
with	O
the	O
password	O
	
By	O
tabulating	O
all	O
possible	O
password	O
lengths	O
from	O
7	O
to	O
16	O
-LRB-	O
no	O
passwords	O
shorter	O
than	O
length	O
7	O
generate	O
entries	O
in	O
the	O
PPL	O
,	O
and	O
the	O
realtime	O
locator	O
FIFO	O
is	O
length	O
16	O
-RRB-	O
and	O
all	O
combinations	O
of	O
the	O
4	O
different	O
types	O
we	O
find	O
a	O
unique	O
mapping	O
between	O
the	O
quantized	O
password	O
strength	O
Figure	O
9	O
:	O
Different	O
types	O
of	O
passwords	O
as	O
a	O
function	O
of	O
length	O
averaged	O
across	O
all	O
sites	O
	
We	O
then	O
run	O
an	O
association	O
rule	O
miner	O
-LSB-	O
24	O
-RSB-	O
1	O
-LRB-	O
which	O
is	O
based	O
on	O
the	O
Apriori	M
algorithm	M
in	O
-LSB-	O
1	O
-RSB-	O
-RRB-	O
to	O
find	O
those	O
frequent	O
itemsets	O
	
The	O
Apriori	M
algorithm	M
works	O
in	O
two	O
steps	O
	
The	O
Apriori	M
algorithm	M
handles	O
each	O
transaction	O
and	O
frequent	O
itemset	O
as	O
a	O
bag	O
of	O
items	O
-LRB-	O
or	O
words	O
-RRB-	O
without	O
the	O
notion	O
of	O
sequence	O
	
We	O
can	O
then	O
determine	O
the	O
sequence	O
of	O
words	O
of	O
the	O
frequent	O
itemsets	O
-LRB-	O
which	O
are	O
lexicographically	O
sorted	O
by	O
our	O
Apriori	M
algorithm	M
implementation	O
-RRB-	O
by	O
hashing	M
each	O
of	O
them	O
into	O
the	O
hash	M
table	M
containing	O
the	O
lexicographically	O
sorted	O
transactions	O
	
For	O
example	O
,	O
the	O
study	O
in	O
-LSB-	O
25	O
-RSB-	O
did	O
reasoning	O
over	O
pD	O
*	O
that	O
includes	O
rules	O
for	O
handling	O
owl	O
:	O
sameAs	O
,	O
owl	O
:	O
IFP	O
and	O
owl	O
:	O
FP	O
axioms	O
	
If	O
both	O
of	O
them	O
have	O
counterparts	O
in	O
these	O
frequent	O
property	O
combinations	O
,	O
say	O
-LRB-	O
Sampling	M
	
By	O
applying	O
the	O
Apriori	M
algorithm	M
to	O
perform	O
association	M
rule	M
mining	M
,	O
we	O
discovered	O
9,61	O
frequent	O
property	O
combinations	O
with	O
confidences	O
greater	O
than	O
98	O
	
For	O
example	O
,	O
we	O
can	O
directly	O
implement	O
steps	O
-LRB-	O
i	O
-RRB-	O
?ê?	O
-LRB-	O
v	O
-RRB-	O
in	O
the	O
GraphX	O
of	O
Apache	O
Spark	M
3	O
	
Query	O
optimization	M
is	O
a	O
fundamental	O
and	O
crucial	O
subtask	O
of	O
query	O
execution	O
in	O
database	O
management	O
systems	O
	
Selectivity	M
Estimation	M
Heuristics	M
	
Heuristics	M
are	O
used	O
to	O
weight	O
the	O
nodes	O
and	O
edges	O
of	O
a	O
BGP	O
abstraction	O
	
Heuristics	M
Without	O
Pre-computed	O
Statistics	M
	
Heuristics	M
With	O
Pre-computed	O
Statistics	M
	
Sampling	M
is	O
potentially	O
useful	O
for	O
large	O
RDF	O
datasets	O
at	O
the	O
cost	O
,	O
however	O
,	O
of	O
a	O
loss	O
of	O
accuracy	O
	
Heuristics	M
based	O
on	O
the	O
probabilistic	O
framework	O
-LRB-	O
Section	O
33	O
-RRB-	O
implement	O
wrappers	O
around	O
these	O
two	O
methods	O
and	O
,	O
hence	O
,	O
provide	O
selectivity	O
information	O
for	O
the	O
optimization	M
of	O
basic	O
graph	O
patterns	O
	
:	O
Query	O
optimization	M
time	O
-RRB-	O
`	O
RDF	O
quads	O
-RRB-	O
are	O
done	O
on	O
a	O
small	O
fraction	O
of	O
the	O
subjects	O
of	O
the	O
first	O
range	O
check	O
	
Randomized	M
algorithms	M
-LRB-	O
eg	O
Genetic	M
algorithms	M
-LRB-	O
eg	O
,	O
`	O
WWW	O
2007	O
/	O
Track	O
:	O
Search	O
Session	O
:	O
Personalization	O
'	O
`	O
Spreading	O
activation	O
has	O
been	O
proposed	O
for	O
searching	O
in	O
graphs	O
for	O
over	O
a	O
decade	O
-LSB-	O
19	O
,	O
20	O
,	O
16	O
-RSB-	O
	
Clipping	O
at	O
k	O
is	O
reasonable	O
,	O
because	O
,	O
in	O
applications	O
,	O
users	O
are	O
generally	O
not	O
adversely	O
affected	O
by	O
erroneous	O
ranking	O
low	O
in	O
the	O
ranked	O
list	O
	
Moreover	O
,	O
these	O
schemes	O
do	O
not	O
systematically	O
interweave	O
tasks	O
from	O
di	O
?å?	O
erent	O
batches	O
,	O
and	O
thus	O
present	O
also	O
the	O
same	O
shortcomings	O
as	O
FIFO	O
	
One	O
popular	O
approach	O
currently	O
used	O
in	O
Hadoop/Yarn	O
is	O
Fair	M
Scheduling	M
-LRB-	O
FS	O
-RRB-	O
-LSB-	O
16	O
-RSB-	O
	
This	O
approach	O
is	O
the	O
crowd-equivalent	O
of	O
Delay	M
Scheduling	M
-LSB-	O
39	O
-RSB-	O
	
FIFO	O
order	O
is	O
-LSB-	O
	
In	O
each	O
run	O
,	O
we	O
use	O
a	O
different	O
scheduling	M
algorithm	M
from	O
:	O
FIFO	O
,	O
FS	O
,	O
RR	O
,	O
and	O
SJF	O
,	O
with	O
10	O
\	O
uf8ff	O
|	O
workf	O
orce	O
|	O
\	O
uf8ff	O
15	O
	
We	O
see	O
how	O
FIFO	O
just	O
assigns	O
tasks	O
from	O
a	O
batch	O
until	O
it	O
is	O
completed	O
	
``	O
To	O
summarize	O
,	O
the	O
main	O
observations	O
that	O
we	O
draw	O
from	O
our	O
experiments	O
are	O
:	O
Large	O
HIT	O
batches	O
are	O
preferred	O
by	O
crowd	O
workers	O
";"	O
Thus	O
,	O
large	O
batches	O
attract	O
a	O
larger	O
workforce	O
which	O
implies	O
a	O
higher	O
throughput	O
";"	O
Individual	O
workers	O
perform	O
slightly	O
better	O
when	O
working	O
on	O
homogeneous	O
batches	O
-LRB-	O
compared	O
to	O
batches	O
regrouping	O
di	O
?å?	O
erent	O
types	O
of	O
HITs	O
-RRB-	O
";"	O
HIT-BUNDLE	O
have	O
overall	O
a	O
positive	O
impact	O
on	O
task	O
latency	O
as	O
they	O
tend	O
to	O
attract	O
bigger	O
workforces	O
";"	O
Scheduling	M
techniques	O
make	O
it	O
possible	O
to	O
prioritize	O
HIT	O
batches	O
as	O
needed	O
while	O
being	O
fair	O
with	O
all	O
running	O
batches	O
and	O
all	O
involved	O
workers	O
";"	O
In	O
particular	O
,	O
FS	O
and	O
WCFS	O
equally	O
distribute	O
the	O
available	O
workforce	O
over	O
the	O
di	O
?å?	O
erent	O
batches	O
";"	O
The	O
techniques	O
we	O
evaluated	O
can	O
be	O
applied	O
on	O
top	O
of	O
existing	O
micro-task	O
crowdsourcing	O
platforms	O
in	O
a	O
scalable	O
fashion	O
without	O
the	O
need	O
of	O
new	O
push	O
crowdsourcing	M
mechanisms	O
or	O
systems	O
,	O
thus	O
leveraging	O
large	O
crowds	O
of	O
people	O
already	O
engaged	O
on	O
existing	O
plat	O
-	O
forms	O
	
''	O
`	O
Task	O
Assignment	O
and	O
Scheduling	M
	
Scheduling	M
tasks	O
for	O
`	O
the	O
crowd	O
has	O
been	O
recently	O
discussed	O
in	O
the	O
context	O
of	O
work	O
quality	O
mostly	O
,	O
while	O
we	O
focus	O
on	O
eciency	O
	
Thus	O
,	O
we	O
explored	O
the	O
problem	O
of	O
scheduling	O
HITs	O
using	O
weighted	O
Fair	M
Scheduling	M
algorithms	O
,	O
where	O
priority	O
is	O
expressed	O
as	O
a	O
function	O
of	O
price	O
	
This	O
paper	O
presents	O
GlobeTP	M
,	O
a	O
database	O
replication	O
system	O
that	O
exploits	O
the	O
fact	O
that	O
the	O
database	O
queries	O
issued	O
by	O
typical	O
Web	O
applications	O
belong	O
to	O
a	O
relatively	O
small	O
number	O
of	O
query	O
templates	O
-LSB-	O
2	O
,	O
19	O
,	O
27	O
-RSB-	O
	
We	O
however	O
return	O
briefly	O
to	O
this	O
issue	O
in	O
Section	O
62	O
to	O
`	O
WWW	O
2007	O
/	O
Track	O
:	O
Performance	O
and	O
Scalability	O
Session	O
:	O
Scalable	O
Systems	O
for	O
Dynamic	O
Content	O
`	O
show	O
how	O
availability	O
constraints	O
can	O
be	O
taken	O
into	O
account	O
in	O
GlobeTP	M
	
We	O
show	O
in	O
Section	O
55	O
how	O
GlobeTP	M
can	O
easily	O
be	O
coupled	O
with	O
a	O
widearea	O
database	O
caching	O
system	O
so	O
that	O
both	O
throughput	O
and	O
latency	O
can	O
be	O
improved	O
at	O
the	O
same	O
time	O
	
Instead	O
,	O
GlobeTP	M
treats	O
each	O
read	O
and	O
write	O
query	O
as	O
independent	O
operations	O
	
However	O
,	O
our	O
system	O
can	O
also	O
be	O
easily	O
coupled	O
with	O
a	O
distributed	O
database	O
query	O
cache	O
such	O
as	O
DBProxy	M
-LSB-	O
2	O
-RSB-	O
and	O
GlobeCBC	O
-LSB-	O
27	O
-RSB-	O
	
Query	O
routing	O
gains	O
a	O
higher	O
significance	O
in	O
GlobeTP	M
	
The	O
query	O
router	O
used	O
in	O
GlobeTP	M
thus	O
differs	O
from	O
the	O
traditional	O
query	O
routers	O
used	O
in	O
fully	O
replicated	O
databases	O
in	O
the	O
following	O
aspects	O
	
`	O
In	O
this	O
section	O
,	O
we	O
compare	O
the	O
performance	O
of	O
full	O
database	O
replication	O
to	O
GlobeTP	M
for	O
two	O
well-known	O
Web	O
application	O
benchmarks	O
	
In	O
addition	O
to	O
these	O
experiments	O
,	O
we	O
also	O
evaluate	O
the	O
benefit	O
of	O
adding	O
a	O
database	O
query	O
caching	O
layer	O
to	O
GlobeTP	M
	
Since	O
GlobeTP	M
only	O
operates	O
at	O
the	O
database	O
query	O
level	O
,	O
the	O
proportion	O
of	O
update	O
interactions	O
is	O
irrelevant	O
here	O
	
'	O
One	O
important	O
goal	O
of	O
GlobeTP	M
is	O
to	O
reduce	O
the	O
replication	O
degree	O
of	O
individual	O
database	O
tables	O
to	O
reduce	O
the	O
number	O
of	O
UDI	O
queries	O
to	O
be	O
processed	O
	
Since	O
searches	O
are	O
implemented	O
as	O
very	O
expensive	O
read	O
queries	O
,	O
removing	O
them	O
from	O
the	O
workload	O
mechanically	O
improves	O
the	O
cost	O
ratio	O
of	O
UDI	O
queries	O
and	O
thereby	O
the	O
gains	O
to	O
be	O
expected	O
from	O
GlobeTP	M
	
For	O
these	O
,	O
GlobeTP	M
will	O
not	O
provide	O
any	O
improvement	O
unless	O
the	O
application	O
itself	O
is	O
updated	O
-LRB-	O
see	O
Section	O
61	O
-RRB-	O
	
`	O
WWW	O
2007	O
/	O
Track	O
:	O
Performance	O
and	O
Scalability	O
'	O
53	O
Effect	O
of	O
Partial	O
Replication	O
and	O
Template	O
-	O
Aware	O
Query	O
Routing	O
`	O
To	O
illustrate	O
the	O
benefits	O
of	O
GlobeTP	M
,	O
we	O
measured	O
the	O
query	O
execution	O
latencies	O
of	O
read	O
and	O
UDI	O
queries	O
together	O
using	O
different	O
configurations	O
	
For	O
each	O
of	O
the	O
two	O
benchmarks	O
,	O
we	O
compared	O
the	O
performance	O
of	O
full	O
replication	O
,	O
GlobeTP	M
using	O
RR-QID	O
query	O
routing	O
,	O
and	O
GlobeTP	M
using	O
cost-based	O
query	O
routing	O
	
As	O
one	O
can	O
see	O
,	O
in	O
both	O
cases	O
GlobeTP	M
processes	O
queries	O
with	O
a	O
much	O
lower	O
latency	O
than	O
full	O
replication	O
	
For	O
example	O
,	O
in	O
RUBBOS	O
GlobeTP	M
processes	O
40	O
%	O
more	O
queries	O
than	O
full	O
replication	O
within	O
10	O
ms	O
In	O
TPC-W	M
,	O
GlobeTP	M
processes	O
20	O
%	O
more	O
queries	O
within	O
10	O
ms	O
than	O
full	O
replication	O
	
In	O
RUBBoS	O
,	O
GlobeTP	M
combined	O
with	O
cost-based	O
routing	O
outperforms	O
both	O
other	O
configurations	O
	
One	O
should	O
note	O
that	O
GlobeTP	M
has	O
greater	O
effect	O
on	O
the	O
latency	O
in	O
the	O
case	O
of	O
RUBBoS	M
than	O
for	O
TPC-W	M
	
As	O
we	O
will	O
see	O
in	O
the	O
next	O
section	O
,	O
the	O
throughput	O
improvements	O
that	O
GlobeTP	M
provides	O
are	O
significantly	O
greater	O
for	O
TPC-W	M
than	O
RUBBoS	M
	
On	O
the	O
other	O
hand	O
,	O
GlobeTP	M
can	O
sustain	O
up	O
to	O
150	O
%	O
higher	O
throughput	O
while	O
using	O
identical	O
hardware	O
resources	O
	
In	O
RUBBoS	M
,	O
GlobeTP	M
again	O
performs	O
better	O
than	O
full	O
replication	O
,	O
yet	O
with	O
a	O
lower	O
difference	O
	
With	O
4	O
and	O
8	O
servers	O
,	O
GlobeTP	M
sustains	O
120	O
more	O
EBs	O
than	O
full	O
replication	O
,	O
which	O
accounts	O
for	O
57	O
%	O
of	O
throughput	O
improvement	O
	
As	O
noted	O
in	O
Section	O
32	O
,	O
GlobeTP	M
can	O
easily	O
be	O
coupled	O
with	O
a	O
database	O
query	O
caching	O
system	O
as	O
most	O
query	O
caching	O
systems	O
rely	O
on	O
the	O
same	O
assumption	O
as	O
GlobeTP	M
regarding	O
the	O
explicit	O
definition	O
of	O
query	O
templates	O
	
However	O
,	O
GlobeTP	M
focuses	O
on	O
improving	O
the	O
throughput	O
of	O
the	O
application	O
's	O
origin	O
database	O
,	O
while	O
query	O
caching	O
systems	O
aim	O
at	O
reducing	O
the	O
individual	O
query	O
execution	O
latencies	O
	
In	O
our	O
experiments	O
,	O
we	O
use	O
our	O
own	O
in-house	O
query	O
caching	O
solution	O
,	O
GlobeCBC	O
-LSB-	O
27	O
-RSB-	O
	
GlobeCBC	O
acts	O
as	O
a	O
very	O
simple	O
object	O
cache	O
:	O
unlike	O
other	O
similar	O
systems	O
it	O
does	O
not	O
attempt	O
to	O
merge	O
multiple	O
query	O
results	O
into	O
a	O
single	O
view	O
of	O
the	O
database	O
	
Instead	O
,	O
GlobeCBC	O
stores	O
the	O
result	O
of	O
each	O
query	O
independently	O
from	O
the	O
others	O
	
In	O
this	O
paper	O
we	O
have	O
presented	O
GlobeTP	M
,	O
which	O
exploits	O
table-granularity	M
partial	M
database	M
replication	M
to	O
optimize	M
the	O
system	O
throughput	O
	
To	O
increase	O
the	O
system	O
's	O
scalability	O
even	O
further	O
,	O
a	O
natural	O
extension	O
is	O
to	O
combine	O
GlobeTP	M
with	O
a	O
database	O
query	O
caching	O
system	O
such	O
as	O
GlobeCBC	O
,	O
as	O
both	O
systems	O
rely	O
on	O
the	O
same	O
definition	O
of	O
query	O
templates	O
	
These	O
systems	O
complement	O
each	O
other	O
very	O
well	O
:	O
query	O
caching	O
improves	O
the	O
execution	O
latency	O
in	O
a	O
wide-area	O
setting	O
by	O
filtering	O
out	O
many	O
read	O
queries	O
,	O
while	O
GlobeTP	M
shows	O
its	O
best	O
potential	O
for	O
improving	O
throughput	O
under	O
workloads	O
that	O
contain	O
many	O
UDI	O
queries	O
	
The	O
instances	O
of	O
these	O
classes	O
and	O
properties	O
,	O
modeling	O
the	O
DW	O
contents	O
to	O
be	O
further	O
analyzed	O
,	O
are	O
intensionally	O
defined	O
in	O
the	O
schema	O
,	O
following	O
the	O
well-know	O
Global	M
As	M
View	M
-LRB-	O
GAV	M
-RRB-	O
approach	O
for	O
data	O
integration	O
-LSB-	O
19	O
-RSB-	O
	
One	O
other	O
feature	O
that	O
is	O
common	O
to	O
all	O
production	O
rule	O
systems	O
is	O
that	O
they	O
are	O
all	O
based	O
on	O
-LRB-	O
a	O
version	O
of	O
-RRB-	O
the	O
Rete	M
algorithm	M
-LSB-	O
10	O
-RSB-	O
--	O
a	O
combination	O
of	O
the	O
semi-naive	O
bottom-up	O
computation	O
-LSB-	O
27	O
-RSB-	O
commonly	O
used	O
in	O
Datalog	O
systems	O
with	O
a	O
certain	O
heuristic	M
for	O
common	O
expression	O
elimination	O
-LSB-	O
6	O
-RSB-	O
	
Like	O
Drools	M
,	O
it	O
is	O
mainly	O
a	O
bottom-up	O
system	O
,	O
based	O
on	O
an	O
enhanced	O
version	O
of	O
the	O
Rete	M
algorithm	M
,	O
but	O
it	O
also	O
has	O
certain	O
top-down	O
inference	O
capabilities	O
	
Recursion	M
is	O
perhaps	O
the	O
most	O
important	O
feature	O
that	O
distinguishes	O
rule-based	O
systems	O
from	O
traditional	O
database	O
management	O
systems	O
-LRB-	O
SQL	O
:1999	O
extensions	O
notwithstanding	O
-RRB-	O
	
RW-TR	O
is	O
built	O
on	O
the	O
distributed	O
graph	O
processing	O
system	O
Signal/Collect	M
-LSB-	O
24	O
-RSB-	O
	
2	O
Signal/Collect	M
is	O
similar	O
to	O
Pregel	M
-LSB-	O
19	O
-RSB-	O
,	O
GraphLab/Pow	O
-	O
erGraph	O
-LSB-	O
6	O
-RSB-	O
,	O
and	O
Trinity	O
-LSB-	O
22	O
-RSB-	O
	
`	O
RW-TR	O
is	O
built	O
leveraging	O
the	O
large-scale	O
,	O
parallel	O
and	O
distributed	O
graph	O
processing	O
framework	O
Signal/Collect	M
4	O
-LSB-	O
24	O
,	O
25	O
-RSB-	O
	
In	O
contrast	O
to	O
other	O
frameworks	O
,	O
Signal/Collect	M
allows	O
for	O
asynchronous	O
execution	O
,	O
multiple	O
vertex	O
types	O
,	O
and	O
the	O
ability	O
to	O
change	O
the	O
graph	O
structure	O
during	O
the	O
execution	O
	
Conceptually	O
,	O
Signal/Collectvertices	M
can	O
be	O
seen	O
as	O
actor-like	O
active	O
elements	O
,	O
where	O
the	O
framework	O
handles	O
messaging	O
,	O
parallelization	O
and	O
distribu	O
-	O
tion	O
	
The	O
core	O
idea	O
of	O
RW-TR	M
is	O
to	O
build	O
a	O
triple	O
store	O
with	O
three	O
types	O
of	O
Signal/Collect	M
vertices	O
:	O
Each	O
index	O
vertex	O
corresponds	O
to	O
a	O
triple	O
pattern	O
,	O
each	O
triple	O
vertex	O
corresponds	O
to	O
an	O
RDF	O
triple	O
,	O
and	O
query	O
vertices	O
coordinate	O
query	O
execution	O
	
The	O
index	O
graph	O
is	O
optimized	O
for	O
efficient	O
routing	O
of	O
query	O
descriptions	O
to	O
data	O
and	O
its	O
vertices	O
are	O
addressable	O
by	O
an	O
ID	O
,	O
which	O
is	O
a	O
unique	O
-LSB-	O
'	O
`	O
As	O
mentioned	O
before	O
,	O
RW-TR	O
is	O
a	O
triple	O
store	O
with	O
three	O
types	O
of	O
Signal/Collect	M
vertices	O
:	O
Triple	O
vertices	O
-LRB-	O
level	O
4	O
,	O
Fig	O
	
These	O
vertices	O
are	O
added	O
to	O
Signal/Collect	M
,	O
which	O
turns	O
them	O
into	O
parallel	O
processing	O
units	O
	
After	O
the	O
query	O
optimizer	O
determines	O
the	O
execution	O
order	O
of	O
the	O
triple	O
patterns	O
,	O
the	O
query	O
gets	O
processed	O
as	O
follows	O
:	O
'	O
`	O
The	O
query	O
vertex	O
emits	O
a	O
single	O
query	O
particle	O
,	O
which	O
is	O
routed	O
-LRB-	O
by	O
Signal/Collect	M
-RRB-	O
to	O
the	O
index	O
vertex	O
that	O
matches	O
its	O
first	O
unmatched	O
triple	O
pattern	O
	
Signal/Collect	M
uses	O
the	O
same	O
mappings	O
for	O
vertex	O
addressing	O
and	O
for	O
routing	O
messages	O
to	O
-LRB-	O
potentially	O
non-existent	O
-RRB-	O
index	O
vertices	O
	
Pipelining	M
,	O
however	O
,	O
comes	O
at	O
the	O
cost	O
of	O
more	O
complexity	O
in	O
both	O
the	O
operators	O
and	O
their	O
coordination	O
	
A	O
full	O
efficiency	O
evaluation	O
of	O
RW-TR	M
's	O
RWR	M
capability	O
or	O
an	O
extension	O
to	O
other	O
graph	O
analytics	O
,	O
which	O
would	O
be	O
supported	O
by	O
the	O
underlying	O
Signal/Collect	M
framework	O
,	O
is	O
beyond	O
the	O
scope	O
of	O
this	O
paper	O
	
Rabin	M
fingerprinting	M
was	O
used	O
earlier	O
by	O
Manber	O
-LSB-	O
11	O
-RSB-	O
to	O
find	O
similar	O
files	O
within	O
a	O
file	O
system	O
	
Bandwidth	O
access	O
is	O
both	O
expensive	O
and	O
limited	O
in	O
developing	O
regions	O
	
-RSB-	O
-RCB-	O
-RSB-	O
-RCB-	O
-RCB-	O
,	O
'	O
_	O
score	O
'	O
:	O
8869356	O
-RCB-	O
,	O
-LCB-	O
'	O
_	O
index	O
'	O
:	O
`	O
mm	O
'	O
_	O
type	O
'	O
:	O
`	O
pubs	O
'	O
_	O
id	O
'	O
:	O
`	O
conf_www_KellyM02	O
'	O
_	O
source	O
'	O
:	O
-LCB-	O
`	O
content	O
'	O
:	O
-LCB-	O
`	O
chapters	O
'	O
:	O
-LSB-	O
-LCB-	O
`	O
paragraphs	O
'	O
:	O
-LSB-	O
`	O
Aliasing	M
occurs	O
in	O
Web	O
transactions	O
when	O
different	O
request	O
URLs	O
yield	O
replies	O
containing	O
identical	O
data	O
payloads	O
	
Aliasing	O
:	O
Many	O
times	O
different	O
names	O
or	O
abbreviations	O
are	O
used	O
for	O
the	O
same	O
city	O
name	O
	
The	O
cleanest	O
formulation	O
of	O
which	O
we	O
are	O
aware	O
is	O
given	O
by	O
Meila	O
-LSB-	O
12	O
-RSB-	O
,	O
who	O
proposes	O
addressing	O
many	O
of	O
the	O
concerns	O
with	O
the	O
above	O
methods	O
using	O
a	O
new	O
measure	O
called	O
the	O
Variation	M
of	M
Information	M
-LRB-	O
VI	M
-RRB-	O
	
Sampling	M
training	O
instances	O
and	O
validating	O
on	O
held-out	O
labeled	O
data	O
show	O
that	O
the	O
classifier	O
learns	O
quickly	O
,	O
settling	O
near	O
its	O
best	O
accuracy	O
within	O
only	O
2	O
--	O
4	O
%	O
of	O
the	O
training	O
data	O
available	O
	
For	O
example	O
,	O
string	O
decomposition	O
techniques	O
based	O
on	O
Karp-Rabin	M
fingerprints	M
have	O
been	O
used	O
to	O
remove	O
redundant	O
network	O
transmissions	O
in	O
applications	O
such	O
as	O
general	O
network	O
traffic	O
-LSB-	O
32	O
-RSB-	O
,	O
distributed	O
file	O
systems	O
-LSB-	O
25	O
,	O
10	O
-RSB-	O
,	O
and	O
web	O
access	O
-LSB-	O
29	O
-RSB-	O
	
This	O
problem	O
is	O
solved	O
through	O
the	O
use	O
of	O
Karp-Rabin	M
fingerprints	M
-LSB-	O
18	O
-RSB-	O
	
Our	O
work	O
is	O
most	O
closely	O
related	O
to	O
,	O
and	O
an	O
extension	O
of	O
,	O
the	O
value-based	O
caching	O
technique	O
in	O
-LSB-	O
29	O
-RSB-	O
,	O
which	O
itself	O
employs	O
Karp-Rabin	M
fingerprints	M
as	O
introduced	O
in	O
-LSB-	O
18	O
-RSB-	O
	
In	O
our	O
simplified	O
example	O
,	O
we	O
suppose	O
that	O
the	O
manager	O
is	O
asked	O
to	O
update	O
the	O
affected	O
loan	O
requests	O
by	O
adding	O
the	O
LastVariation	O
to	O
the	O
Established	O
Rate	O
attribute	O
of	O
the	O
Loan	O
Request	O
related	O
to	O
an	O
Installment	O
Plan	O
of	O
the	O
interested	O
Country	O
	
Further	O
,	O
each	O
community	O
has	O
a	O
probability	O
score	O
s	O
'	O
-LRB-	O
m	O
-RRB-	O
c	O
representing	O
the	O
log	M
probability	M
vector	O
of	O
the	O
c	O
th	O
row	O
of	O
the	O
confusion	M
matrix	M
?Ç	O
-LRB-	O
m	O
-RRB-	O
of	O
community	O
m	O
	
We	O
apply	O
a	O
softmax	O
operator	O
to	O
the	O
community	O
score	O
s	O
'	O
<Equation_11>	O
'	O
for	O
all	O
the	O
classes	O
c	O
to	O
derive	O
a	O
normalised	O
exponentiated	O
version	O
of	O
s	O
'	O
<Equation_12>	O
which	O
we	O
refer	O
to	O
as	O
the	O
community	M
confusion	M
matrix	M
?Ç	O
'	O
<Equation_13>	O
'	O
here	O
??	O
is	O
the	O
Dirac	M
delta	M
function	M
imposing	O
the	O
equality	O
constraint	O
between	O
?Ç	O
'	O
<Equation_14>	O
`	O
and	O
the	O
softmax	O
of	O
s	O
'	O
<Equation_15>	O
'	O
